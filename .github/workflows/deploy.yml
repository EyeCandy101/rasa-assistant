name: Deploy Rasa Assistant

on:
  push:
    branches:
      - main

jobs:
  build-model:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies 
        run: |
          pip install -r requirements.txt
          
      - name: Configure build environment
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip uninstall -y setuptools
          pip install 'setuptools>=57.0.0,<58.0.0'
          pip install 'packaging>=21.0,<22.0'
          
      - name: Install dFlow
        run: |
          git clone https://github.com/robotics-4-all/dFlow.git
          cd dFlow
          # Install in development mode
          pip install -e .
          cd .. 

      - name: Generate Model with dFlow
        run: |
          python dflow/generate_model.py  # script to generate training data from metamodel.dflow

      - name: Train Rasa Model
        run: |
          cd rasa
          rasa train --fixed-model-name latest

      - name: Upload Model as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rasa-model
          path: rasa/models/latest.tar.gz

  build-and-push:
    needs: build-model
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Trained Model
        uses: actions/download-artifact@v3
        with:
          name: rasa-model
          path: rasa/models/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          docker buildx build --platform linux/arm64 -t eyecandy101/rasa:latest --push .

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Reconstruct kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "
          apiVersion: v1
          kind: Config
          clusters:
          - name: k3s
            cluster:
              certificate-authority-data: ${{ secrets.K8S_CERTIFICATE_AUTHORITY_DATA }}
              server: ${{ secrets.K8S_SERVER }}
          users:
          - name: k3s-user
            user:
              client-certificate-data: ${{ secrets.K8S_CLIENT_CERTIFICATE_DATA }}
              client-key-data: ${{ secrets.K8S_CLIENT_KEY_DATA }}
          " > ~/.kube/config

      - name: Deploy to K3s
        run: |
          kubectl apply -f k8s/rasa-deployment.yaml
          kubectl apply -f k8s/service.yaml
