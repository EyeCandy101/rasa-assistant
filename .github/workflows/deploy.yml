name: Deploy Rasa Assistant

on:
  push:
    branches:
      - main

jobs:
  build-model:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies 
        run: |
          pip install -r requirements.txt
          
      - name: Configure build environment
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install 'sqlalchemy<2.0'
          pip uninstall -y setuptools
          pip install 'setuptools>=57.0.0,<58.0.0'
          pip install 'packaging>=20.0,<21.0'
          pip install "attrs<22.2,>=19.3"
          pip install "jsonschema<4.18,>=3.2"
          
      - name: Install dFlow
        run: |
          #git clone https://github.com/robotics-4-all/dFlow.git
          #cd dFlow
          #pip install .
          #cd .. 

      - name: Generate Model with dFlow
        run: |
          #python dflow/generate_model.py  # script to generate training data from metamodel.dflow

      - name: Verify Rasa Structure
        run: |
          ls -la rasa/

      - name: Train Rasa Model
        run: |
          #cd rasa
          #rasa train --fixed-model-name latest

      - name: Upload Model as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rasa-model
          path: rasa/models/latest.tar.gz

  build-and-push:
    needs: build-model
    runs-on: [self-hosted, linux, arm64, raspi]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Trained Model
        uses: actions/download-artifact@v4
        with:
          name: rasa-model
          path: rasa/models/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push Rasa Image
        run: |
          docker buildx build --platform linux/arm64 -t eyecandy101/rasa:latest --push .
          
      - name: Build & Push Action Server Image
        run: |
          docker buildx build --platform linux/arm64 -t eyecandy101/action-server:latest -f Dockerfile-actions --push .

  deploy:
    needs: build-and-push
    runs-on: [self-hosted, linux, arm64, raspi]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure Kubernetes Context
        run: |
          export KUBECONFIG=$HOME/.kube/config
          kubectl config use-context default

      - name: Test kubectl connection
        run: |
          kubectl get nodes
          
      - name: Apply Kubernetes ConfigMap (for YML files)
        run: |
          kubectl delete configmap rasa-config --ignore-not-found
          kubectl create configmap rasa-config \
          --from-file=rasa/config.yml \
          --from-file=rasa/credentials.yml \
          --from-file=rasa/endpoints.yml \
          --from-file=rasa/data/nlu.yml \
          --from-file=rasa/data/rules.yml \
          --from-file=rasa/data/stories.yml

      - name: Deploy to K3s
        run: |
          kubectl apply -f k8s/rasa-deployment.yaml
          kubectl apply -f action-server-deployment.yaml
          #kubectl apply -f k8s/service.yaml
